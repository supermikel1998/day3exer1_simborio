import type { Editor } from 'mem-fs-editor';
import type { DescriptorVariant, AdpPreviewConfig } from '../types';
/**
 * Get the app descriptor variant.
 *
 * @param {string} basePath - The path to the adaptation project.
 * @returns {DescriptorVariant} The app descriptor variant.
 */
export declare function getVariant(basePath: string): DescriptorVariant;
/**
 * Writes the updated variant content to the manifest.appdescr_variant file.
 *
 * @param {string} basePath - The base path of the project.
 * @param {DescriptorVariant} variant - The descriptor variant object.
 * @param {Editor} fs - The mem-fs editor instance.
 */
export declare function updateVariant(basePath: string, variant: DescriptorVariant, fs: Editor): void;
/**
 * Checks if FLP configuration changes exist in the manifest.appdescr_variant.
 *
 * This function determines whether there are changes of type `appdescr_app_changeInbound`
 * or `appdescr_app_addNewInbound` present in the content of the descriptor variant.
 *
 * @param {string} basePath - The base path of the project where the manifest.appdescr_variant is located.
 * @returns {boolean} Returns `true` if FLP configuration changes exist, otherwise `false`.
 * @throws {Error} Throws an error if the variant could not be retrieved.
 */
export declare function flpConfigurationExists(basePath: string): boolean;
/**
 * Returns the adaptation project configuration, throws an error if not found.
 *
 * @param {string} basePath - The path to the adaptation project.
 * @param {string} yamlPath - The path to yaml configuration file.
 * @returns {Promise<AdpPreviewConfig>} the adp configuration
 */
export declare function getAdpConfig(basePath: string, yamlPath: string): Promise<AdpPreviewConfig>;
/**
 * Get all files in the webapp folder.
 *
 * @param {string} basePath - The path to the adaptation project.
 * @returns {Array<{ relativePath: string; content: string }>} The files in the webapp folder.
 */
export declare function getWebappFiles(basePath: string): {
    relativePath: string;
    content: string;
}[];
//# sourceMappingURL=helper.d.ts.map